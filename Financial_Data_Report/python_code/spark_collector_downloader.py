# just enter jar name here, the rest of url will be autogenerated, e.g.:
# jar_name = 'kensu-spark-collector-1.0.0-rc466_spark-3.0.1.jar'
# jar_name = 'kensu-spark-collector-1.0.0-alpha221011180019_spark-3.2.1.jar'
# jar_name = 'kensu-spark-collector-0.25.3_spark-3.0.1.jar'
jar_name = 'kensu-spark-collector-1.0.0-rc466_spark-3.0.1.jar'

base_url = 'https://public.usnek.com/n/repository/public/releases/kensu-spark-collector'


def jar_uri(base_url, file_name):
    # generate uri for spark agent jar, based on file name
    # if we find any of these strings in file name, use the following directory, otherwise default to directory named 'stable'
    default_dir = 'stable'
    filename_to_dir = {
            '-rc': 'rc',
            '-alpha': 'alpha'
    }
    selected_dir = default_dir
    for file_matcher, dir_to_use in filename_to_dir.items():
        if file_matcher in file_name:
            selected_dir = dir_to_use
    return f'{base_url}/{selected_dir}/{file_name}'

kensu_agent_url = jar_uri(base_url, jar_name)
kensu_agent_jar_local_path = f'../lib/{jar_name}'

def maybe_download_spark_collector(local_filename):
    global kensu_agent_url
    import os
    if os.path.isfile(local_filename):
        print(f'Spark collector already exists at {local_filename}. Not downloading again.')
    else:
        from urllib import request
        print(f'Downloading Kensu spark collector from {kensu_agent_url} to {local_filename}')
        try:
            request.urlretrieve(kensu_agent_url, local_filename)
        except Exception as err:
            print(f'Encountered an error while downloading from {kensu_agent_url}:')
            print(err)
            raise err

